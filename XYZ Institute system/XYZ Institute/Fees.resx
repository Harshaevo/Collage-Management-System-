<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEBLAEsAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwg
        JC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIy
        MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCAHCAyADASIAAhIBAxIB/8QA
        HAABAAEFAQEAAAAAAAAAAAAAAAYBAgMEBQcI/8QASRABAAIBAgQCBQoDBQUFCQAAAAECAwQRBRIhMUFR
        BhMiYXEHFDJCUoGRscHRI3KhFSQzYuE0Q3OConSSssLwFiU2N1Nkk6Px/8QAGgEBAAMBAQEAAAAAAAAA
        AAAAAAIDBAEFBv/EACoRAQACAgICAgEDBAMBAAAAAAABAgMRBBIhMTJBURMiMwUUYXEjQoFD/9oADAMB
        AAIRAxEAPwD38AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        mIWPDsWq5pnDnrOPJtt1b9r8uaufbeLx1iPhtMJ36S+g+m49T1+nn5prqRM1y7dMkz9qI/Pv8Xm2aNfw
        LV24fxXTTSe8RPa0farLwZrNZ1LfysX/AGh4+us6bORj1+6Eo4dxi9IjFntGbHHSuSs+1Hxh2vWUy6fn
        paLUteZiYnff2UIxZNPNq5aTknad4iYj823oeI5NHE0mbTjm3NNYjeJ3jafgyVVxMRKmk7UxaKz4TC30
        snwj8nN1nCMeq1uLNjt6vLtG/TpPsy2tHrsGvpa+KdpnvSe9fBsR0tW3LbnrG3htPhuumNuRaJ8tE134
        ItE+UXr6Pav1cb3xRXbvvP7O1o+G4tHnz2j28tqWibT8I7N7k/h8m/htuvpHPa9oraLWjlnfbaN9t/yR
        pTXtOsoY8c7a+NXtliGamlvNsVuWesz+UtecNseKu8TEc1e/8rtTG3JMRvy+EfBq56x6qlesxzRvM128
        NkusxG2i3xX34kVx7ifLbEblw+I675np5tTl9ZbeKc1to38/uRLJM5b46c/rLzaZtaJ33mZ3Z+IZvnGr
        v6/ni+O00jliJjaJ6OXrdbTTYrVxc3PaNptbvt5Rsw2c8TZ89kly3zlZqLZuI8QrotFScmbNk5aVjxnz
        +D130d9HsHo5wemnx7XzTMZM+Xb6dvH7o8HH9AfRSeFaX+09dj/v+or7NZ74aT4fGfH8E223buHTzNmv
        FTpSIaeLTzNmnFXrWIa23LvvO23eZ8Np3hda03mNtt9piIid+/j8FbUtWfZ3nbtMT1j3de6kVtPTa23v
        iIhYLApG967dt5t922xf6dv5o/JlpXl33neZ7seSk80zETMTtPTwkAMPf/kqx0/3f8tP1ZsdZrvMxt2i
        InyhZyTWa+zaeXpG2207dgBWP9lt/LK2f8Sfj/5WWKfwuSZ8NpY+S28+zPNt7tt9ttwBd/u8Xxj8mKna
        P+X82e9ZileWN+WY6MVKTvERvtvG8zXbbYAX5Ynm6fWjb7+8McxHS0Ty7TPLM/1hsWrFqzE9pYppas9O
        affXbr8YAFtN4mN6RO3aK7RH5s0Xia83h47+DBy7/Vn7qRDNFN8dq26c2+/u3AGGdTbffaIjy23Z8d+e
        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
        AAAAAAAAAAAAAAAAAAAAAAAB/9k=
</value>
  </data>
</root>